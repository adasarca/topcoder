package com.example.topcoder.graph;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import static org.testng.Assert.*;

/*
 * Created by AdelaSarca
 * Date: 11/22/2019
 */
public class TeamBuilderTest {

    private TeamBuilder teamBuilder;

    @BeforeMethod
    public void setup() {
        this.teamBuilder = new TeamBuilder();
    }

    @Test
    public void testSpecialLocations0() {
        //setup
        String[] paths = new String[]{"010","000","110"};
        int[] expected = new int[]{1,1};

        //test
        int[] locations = this.teamBuilder.specialLocations(paths);

        //verify
        assertEquals(locations, expected);
    }

    @Test
    public void testSpecialLocations1() {
        //setup
        String[] paths = new String[]{"0010","1000","1100","1000"};
        int[] expected = new int[]{1,3};

        //test
        int[] locations = this.teamBuilder.specialLocations(paths);

        //verify
        assertEquals(locations, expected);
    }

    @Test
    public void testSpecialLocations2() {
        //setup
        String[] paths = new String[]{"01000","00100","00010","00001","10000"};
        int[] expected = new int[]{5,5};

        //test
        int[] locations = this.teamBuilder.specialLocations(paths);

        //verify
        assertEquals(locations, expected);
    }

    @Test
    public void testSpecialLocations3() {
        //setup
        String[] paths = new String[]{"0110000", "1000100", "0000001", "0010000", "0110000", "1000010", "0001000"};
        int[] expected = new int[]{1,3};

        //test
        int[] locations = this.teamBuilder.specialLocations(paths);

        //verify
        assertEquals(locations, expected);
    }

    @Test
    public void testSpecialLocations4() {
        //setup
        String[] paths = new String[]{};
        int[] expected = new int[]{0,0};

        //test
        int[] locations = this.teamBuilder.specialLocations(paths);

        //verify
        assertEquals(locations, expected);
    }

    @Test
    public void testSpecialLocations5() {
        //setup
        String[] paths = new String[]{};
        int[] expected = new int[]{50,50};

        //test
        int[] locations = this.teamBuilder.specialLocations(paths);

        //verify
        assertEquals(locations, expected);
    }

    @Test
    public void testSpecialLocations6() {
        //setup
        String[] paths = new String[]{"000000110000000000000000001000000000000000100", "000000000000000000000010000000000000000000000", "000000000010000000000000000000000000000111000", "000000000000000000110000000000000000000100000", "000000010000010000000000000000000000000000000", "000100010000010101000000001010000000000000101", "000000000000000001000000000100100000000000000", "001000000000010000010000001000001001101000001", "010001000001100000000000100000000000100000000", "000000000000000000100000010001010000011001000", "000000000001000000100000000010010100101100000", "010101000000000101000000000001100100101000000", "000000000001000000000000101100001000101000001", "001000000110000000000000000000000010000001001", "000000000000000101100000000001000000000010100", "000010000000100000000100000000000000000100010", "000000001010100000001000000000100000001010100", "000000000000000000000000000000000000000000000", "000000000000001000000000101000000000010001000", "001000000000000010000001000000001000000111000", "010100010100000001010100100000000010100000000", "000000010000000000000000000001000000000000010", "000000000001001100000100000000000010000010000", "010000001000000000100000000010000010000000000", "000000100000000000000000000001000010000100000", "000000000000000010010010000000000000100010000", "000001100000000000011110000001000000000000000", "011001100000000000000000000001100000010000000", "000000000000000000000000100001010000110000000", "000010000101000010000100001000000000000001000", "000100000000110000000000000000000000010010100", "000000100010000000000000010000000010000001010", "100000010101000000001000000000000000000100000", "000000000000000000010000011000000000000000011", "000010000000000000000000000100001000011000000", "100000000001000100000001010000000000000000100", "110000010100000101001000000001100000000000100", "000010000000000000000000011000001010100011100", "100010010000000000001000000100000000000001000", "000010000100000001001000000000000100000000000", "000000000000000000000000000000000000000100000", "000000001101000001011000000000000000000000000", "000000000000010000010000001010000000000000000", "000000010000000001010000000000000000010000000", "000000110000001001000000000010001000000110100"};
        int[] expected = new int[]{44,1};

        //test
        int[] locations = this.teamBuilder.specialLocations(paths);

        //verify
        assertEquals(locations, expected);
    }

    @Test
    public void testSpecialLocations7() {
        //setup
        String[] paths = new String[]{"0000001000010000", "0000010001000000", "0101110010000000", "0000000000010000", "0000000100100100", "0000000000000111", "1001010000011000", "0010000000100000", "0101000000100000", "0000000000100110", "0000010000000010", "0000000000001000", "1000000001010000", "0000000000100001", "1001000000000000", "0001000000010010"};
        int[] expected = new int[]{3,11};

        //test
        int[] locations = this.teamBuilder.specialLocations(paths);

        //verify
        assertEquals(locations, expected);
    }
}